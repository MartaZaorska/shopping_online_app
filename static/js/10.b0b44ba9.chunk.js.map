{"version":3,"sources":["components/Rating.tsx","pages/Product.tsx"],"names":["Rating","rating","stars","Array","fill","Math","floor","className","map","star","index","memo","Product","products","useSelector","selectShopState","id","useParams","useState","color","setColor","dispatch","useDispatch","addToCart","bindActionCreators","actionCreators","product","useMemo","item","find","colors","Loader","image_link","brand","description","price","name","width","height","src","alt","to","dangerouslySetInnerHTML","__html","type","onChange","changeHandler","checked","hex_value","htmlFor","style","background","onClick","msgElement","document","querySelector","transform","setTimeout","clickHandler"],"mappings":"2NAGMA,EAAsC,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACtCC,EAAQD,EAAS,IAAIE,MAAM,GAAGC,KAAK,GAAGA,KAAK,EAAG,EAAGC,KAAKC,MAAML,IAAW,IAAIE,MAAM,GAAGC,KAAK,GAE/F,OACE,sBAAKG,UAAU,SAAf,UACGL,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACT,cAAC,IAAD,CAAYH,UAAWE,EAAO,cAAgB,QAA9C,eAAmEC,OAErE,qCAAQT,EAASI,KAAKC,MAAML,GAAU,IAAtC,WAKSU,iBAAKX,GCsDLY,UA3DK,WAClB,IAAQC,EAAaC,YAAYC,KAAzBF,SACAG,EAAOC,cAAPD,GACR,EAA0BE,mBAAwB,MAAlD,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,cACTC,EAAcC,YAAmBC,IAAgBJ,GAAjDE,UAEFG,EAAgCC,mBAAQ,WAC5C,IAAMC,EAAQf,EAASgB,MAAK,SAAAD,GAAI,MAAI,UAAGA,EAAKZ,MAASA,KAErD,OADA,OAAGY,QAAH,IAAGA,OAAH,EAAGA,EAAME,SAAQV,EAASQ,EAAKE,OAAO,IAC/BF,IACN,CAACZ,EAAIH,IAYR,IAAIa,EAAS,OAAO,cAACK,EAAA,EAAD,IAEpB,IAAQC,EAAgEN,EAAhEM,WAAYC,EAAoDP,EAApDO,MAAOC,EAA6CR,EAA7CQ,YAAaC,EAAgCT,EAAhCS,MAAOlC,EAAyByB,EAAzBzB,OAAQ6B,EAAiBJ,EAAjBI,OAAQM,EAASV,EAATU,KAE/D,OACE,qCACE,mBAAG7B,UAAU,mBAAb,mCACA,0BAASA,UAAU,kBAAnB,UACE,qBAAKA,UAAU,iBAAf,SAAgC,qBAAK8B,MAAM,MAAMC,OAAO,MAAMC,IAAKP,EAAYQ,IAAKJ,MACpF,qBAAK7B,UAAU,gBAAf,SAA+B,eAAC,IAAD,CAAMkC,GAAG,QAAT,UAAiB,cAAC,IAAD,CAAalC,UAAU,SAAxC,IAAkD,qDACjF,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,gBAAgBmC,wBAAyB,CAACC,OAAO,GAAD,OAAKP,MACnE,mBAAG7B,UAAU,iBAAb,SAA+B0B,IAC/B,cAAC,EAAD,CAAQhC,OAAQA,IAChB,mBAAGM,UAAU,uBAAuBmC,wBAAyB,CAACC,OAAO,GAAD,OAAKT,MACxEJ,GACC,qBAAKvB,UAAU,SAAf,SACGuB,EAAOtB,KAAI,SAAAoB,GAAI,OACd,sBAAKrB,UAAU,eAAf,UACE,uBAAOqC,KAAK,QAAQC,SAAU,kBA7BxB,SAAC1B,GAAD,OAAyBC,EAASD,GA6BJ2B,CAAclB,IAAOmB,SAAc,OAAL5B,QAAK,IAALA,OAAA,EAAAA,EAAO6B,aAAcpB,EAAKoB,UAAWhC,GAAIY,EAAKoB,YAChH,uBAAOC,QAASrB,EAAKoB,UAAWE,MAAO,CAACC,WAAYvB,EAAKoB,eAFxBpB,EAAKoB,gBAO9C,sBAAKzC,UAAU,oBAAf,UACE,oBAAGA,UAAU,iBAAb,cAAgC4B,KAChC,wBAAQiB,QAAS,kBAnCN,SAAC1B,GACpBH,EAAUG,EAASP,GAEnB,IAAMkC,EAAmCC,SAASC,cAAc,qBAChEF,EAAWH,MAAMM,UAAY,iBAC7BC,YAAW,kBAAMJ,EAAWH,MAAMM,UAAY,qBAAoB,KA8BnCE,CAAahC,IAAUnB,UAAU,kBAAkB,aAAW,MAArF","file":"static/js/10.b0b44ba9.chunk.js","sourcesContent":["import { FC, memo } from 'react';\r\nimport { MdStarRate } from 'react-icons/md';\r\n\r\nconst Rating: FC<{rating: number | null}> = ({rating}) => {\r\n  const stars = rating ? new Array(5).fill(0).fill(1, 0, Math.floor(rating)) : new Array(5).fill(0);\r\n  \r\n  return (\r\n    <div className=\"rating\">\r\n      {stars.map((star, index) => (\r\n        <MdStarRate className={star ? \"icon active\" : \"icon\"} key={`star_${index}`} />\r\n      ))}\r\n      <span>({rating ? Math.floor(rating) : '0'})</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Rating);","import { FC, useMemo, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { FaAngleLeft } from 'react-icons/fa';\r\n\r\nimport { selectShopState, actionCreators } from '../state';\r\nimport { TColor, TProduct } from '../models/types';\r\nimport Loader from '../components/Loader';\r\nimport Rating from '../components/Rating';\r\n\r\nconst Product: FC = () => {\r\n  const { products } = useSelector(selectShopState);\r\n  const { id } = useParams<{id: string}>();\r\n  const [color, setColor] = useState<TColor | null>(null);\r\n  \r\n  const dispatch = useDispatch();\r\n  const { addToCart } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const product: TProduct | undefined = useMemo(() => {\r\n    const item =  products.find(item => `${item.id}` === id);\r\n    if(item?.colors) setColor(item.colors[0]);\r\n    return item;\r\n  }, [id, products]);\r\n\r\n  const changeHandler = (color: TColor): void => setColor(color);\r\n  \r\n  const clickHandler = (product: TProduct): void => {\r\n    addToCart(product, color);\r\n    \r\n    const msgElement: HTMLParagraphElement = document.querySelector(\".product__message\")!;\r\n    msgElement.style.transform = \"translateX(0%)\";\r\n    setTimeout(() => msgElement.style.transform = \"translateX(120%)\", 3000);\r\n  }\r\n\r\n  if(!product) return <Loader />;\r\n\r\n  const { image_link, brand, description, price, rating, colors, name } = product;\r\n\r\n  return (\r\n    <>\r\n      <p className=\"product__message\">Product added to cart</p>\r\n      <section className=\"product content\">\r\n        <div className=\"product__image\"><img width=\"270\" height=\"315\" src={image_link} alt={name} /></div>\r\n        <div className=\"product__link\"><Link to=\"/shop\"><FaAngleLeft className=\"icon\" /> <span>Back to Shop</span></Link></div>\r\n        <div className=\"product__content\">\r\n          <h1 className=\"product__name\" dangerouslySetInnerHTML={{__html: `${name}`}}></h1>\r\n          <p className=\"product__brand\">{brand}</p>\r\n          <Rating rating={rating} />\r\n          <p className=\"product__description\" dangerouslySetInnerHTML={{__html: `${description}`}}></p>\r\n          {colors && (\r\n            <div className=\"colors\">\r\n              {colors.map(item => (\r\n                <div className=\"colors__item\" key={item.hex_value}>\r\n                  <input type=\"radio\" onChange={() => changeHandler(item)} checked={color?.hex_value === item.hex_value} id={item.hex_value} />\r\n                  <label htmlFor={item.hex_value} style={{background: item.hex_value}}></label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"product__controls\">\r\n            <p className=\"product__price\">${price}</p>\r\n            <button onClick={() => clickHandler(product)} className=\"product__button\" aria-label=\"Buy\">Buy now</button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Product;"],"sourceRoot":""}