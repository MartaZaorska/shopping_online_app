{"version":3,"sources":["state/actions/actions.ts","state/reducers/shopReducer.ts","state/reducers/index.ts","state/store.ts","state/actions/action-creators.ts","constants.ts","components/Loader.tsx","hooks/useTotal.ts","components/Navbar.tsx","components/DiscountCode.tsx","components/Header.tsx","components/Footer.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["ActionType","initialState","products","cart","filters","category","brand","sortBy","getIndexInCart","id","color","findIndex","item","product","hex_value","reducer","state","action","type","SET_PRODUCTS","payload","ADD_TO_CART","indexCart","push","quantity","REMOVE_FROM_CART","index","updatedCart","splice","CLEAR_CART","CHANGE_FILTERS","RESET_FILTERS","reducers","combineReducers","shop","shopReducer","selectShopState","store","createStore","sessionData","sessionStorage","getItem","undefined","JSON","parse","err","loadFromSessionStorage","applyMiddleware","thunk","subscribe","setItem","stringify","console","log","saveToSessionStorage","getState","setProducts","dispatch","addToCart","removeFromCart","clearCart","changeFilters","resetFilters","CATEGORIES","SORT","BRANDS","URLS","DISCOUNT","DISCOUNT_CODE","PER_PAGE","Loader","className","useTotal","useMemo","t","forEach","price","cliniquePrices","i","sort","a","b","q","Math","floor","length","toFixed","Navbar","total","to","memo","DiscountCode","Header","Footer","href","target","rel","Date","getFullYear","Home","lazy","Shop","Delivery","Contact","Cart","Product","App","useSelector","useLocation","pathname","useEffect","window","scroll","top","behavior","fallback","path","exact","strict","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","basename","process","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.381fa5d1.chunk.js","sourcesContent":["import { TProduct, TColor, TFilters } from '../../models/types';\r\n\r\nexport enum ActionType {\r\n  SET_PRODUCTS = \"GET_PRODUCTS\",\r\n  ADD_TO_CART = \"ADD_TO_CART\",\r\n  REMOVE_FROM_CART = \"REMOVE_FROM_CART\",\r\n  CLEAR_CART = \"CLEAR_CART\",\r\n  CHANGE_FILTERS = \"CHANGE_FILTERS\",\r\n  RESET_FILTERS = \"RESET_FILTERS\"\r\n};\r\n\r\ninterface SetProductsAction {\r\n  type: ActionType.SET_PRODUCTS,\r\n  payload: TProduct[]\r\n};\r\n\r\ninterface AddToCartAction {\r\n  type: ActionType.ADD_TO_CART,\r\n  payload: { product: TProduct, color: TColor | null }\r\n};\r\n\r\ninterface RemoveFromCartAction {\r\n  type: ActionType.REMOVE_FROM_CART,\r\n  payload: { id: number, color: TColor | null }\r\n};\r\n\r\ninterface ClearCartAction {\r\n  type: ActionType.CLEAR_CART\r\n};\r\n\r\ninterface ChangeFiltersAction {\r\n  type: ActionType.CHANGE_FILTERS,\r\n  payload: TFilters\r\n};\r\n\r\ninterface ResetFiltersAction {\r\n  type: ActionType.RESET_FILTERS\r\n};\r\n\r\nexport type Action = SetProductsAction | AddToCartAction | RemoveFromCartAction | ClearCartAction | ChangeFiltersAction | ResetFiltersAction;","import { TColor, TCartItem, TState } from '../../models/types';\r\nimport { Action, ActionType } from '../actions/actions';\r\n\r\nconst initialState: TState = {\r\n  products: [],\r\n  cart: [],\r\n  filters: {\r\n    category: 'all categories',\r\n    brand: 'all brands',\r\n    sortBy: 'recommended',\r\n  },\r\n};\r\n\r\nconst getIndexInCart = (cart: TCartItem[], id: number, color: TColor | null): number => {\r\n  return cart.findIndex(item => {\r\n    if(id !== item.product.id) return false;\r\n    return color && item.color ? color.hex_value === item.color.hex_value : true;\r\n  });\r\n}\r\n\r\nconst reducer = (state: TState = initialState, action: Action): TState => {\r\n  switch(action.type){\r\n    case ActionType.SET_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: action.payload\r\n      };\r\n    case ActionType.ADD_TO_CART:\r\n      const indexCart = getIndexInCart(state.cart, action.payload.product.id, action.payload.color);\r\n      const cart = [...state.cart];\r\n      indexCart < 0 ? cart.push({...action.payload, quantity: 1}) : cart[indexCart].quantity++;\r\n      return {\r\n        ...state,\r\n        cart\r\n      };\r\n    case ActionType.REMOVE_FROM_CART:\r\n      const index = getIndexInCart(state.cart, action.payload.id, action.payload.color);\r\n      const updatedCart = [...state.cart];\r\n      if(index < 0) return state;\r\n      updatedCart[index].quantity > 1 ? updatedCart[index].quantity-- : updatedCart.splice(index, 1);\r\n      return {\r\n        ...state,\r\n        cart: updatedCart\r\n      };\r\n    case ActionType.CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cart: []\r\n      };\r\n    case ActionType.CHANGE_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.payload\r\n      };\r\n    case ActionType.RESET_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: { brand: 'all brands', category: 'all categories', sortBy: 'recommended' }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport shopReducer from './shopReducer';\r\n\r\nexport const reducers = combineReducers({\r\n  shop: shopReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof reducers>;\r\n\r\nexport const selectShopState = (state: RootState) => state.shop;","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { reducers } from \"./reducers\";\r\nimport { TState } from '../models/types';\r\n\r\nfunction saveToSessionStorage(state: {shop: TState} | {shop: {}}){\r\n  try {\r\n    sessionStorage.setItem(\"shopping-online-app\", JSON.stringify({...state.shop, products: []}));\r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nfunction loadFromSessionStorage(){\r\n  try {\r\n    const sessionData = sessionStorage.getItem(\"shopping-online-app\");\r\n    return sessionData === null ? undefined : {shop: JSON.parse(sessionData)};\r\n  } catch(err) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport const store = createStore(reducers, loadFromSessionStorage(), applyMiddleware(thunk));\r\n\r\nstore.subscribe(() => saveToSessionStorage(store.getState()));","import { Dispatch } from \"redux\";\r\n\r\nimport { TColor, TFilters, TProduct } from \"../../models/types\";\r\nimport { Action, ActionType } from '../actions/actions';\r\n\r\nexport const setProducts = (products: TProduct[]) => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.SET_PRODUCTS,\r\n      payload: products\r\n    });\r\n  }\r\n}\r\n\r\nexport const addToCart = (product: TProduct, color: TColor | null) => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.ADD_TO_CART,\r\n      payload: { product, color }\r\n    });\r\n  }\r\n}\r\n\r\nexport const removeFromCart = (id: number, color: TColor | null) => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.REMOVE_FROM_CART,\r\n      payload: { id, color }\r\n    });\r\n  }\r\n}\r\n\r\nexport const clearCart = () => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.CLEAR_CART\r\n    });\r\n  }\r\n}\r\n\r\nexport const changeFilters = (filters: TFilters) => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.CHANGE_FILTERS,\r\n      payload: filters\r\n    });\r\n  }\r\n}\r\n\r\nexport const resetFilters = () => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.RESET_FILTERS\r\n    });\r\n  }\r\n}","import { TSort, TCategory, TBrand } from './models/types';\r\n\r\nexport const CATEGORIES: TCategory[] = ['all categories', 'blush', 'bronzer', 'eyebrow', 'eyeliner', 'eyeshadow', 'foundation', 'lipstick'];\r\n\r\nexport const SORT: TSort[] = ['recommended', 'price high to low', 'price low to high', 'new in'];\r\n\r\nexport const BRANDS: TBrand[] = ['all brands', 'clinique', \"marcelle\"];\r\n\r\nexport const URLS: string[] = ['https://makeup-api.herokuapp.com/api/v1/products.json?brand=clinique',  'https://makeup-api.herokuapp.com/api/v1/products.json?brand=marcelle'];\r\n\r\nexport const DISCOUNT: number = 10;\r\n\r\nexport const DISCOUNT_CODE: string = \"SHOP10\";\r\n\r\nexport const PER_PAGE: number = 30;\r\n","import { FC } from 'react';\r\n\r\nconst Loader: FC = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <div className=\"circle\"></div>\r\n      <span>Loading...</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import { useMemo } from 'react';\r\nimport { TCartItem } from '../models/types';\r\n\r\nconst useTotal = (cart: TCartItem[]): number => {\r\n  const total: number = useMemo(() => {\r\n    let t = 0;\r\n    cart.forEach(item => t += item.product.price * item.quantity);\r\n\r\n    //Special Offer, Buy 3 products from clinique, get 1 free (the cheapest product is for free)\r\n    let cliniquePrices: number[] = [];\r\n\r\n    cart.forEach(item => {\r\n      if(item.product.brand === \"clinique\"){\r\n        for(let i = 0; i < item.quantity; i++) cliniquePrices.push(item.product.price);\r\n      }\r\n    });\r\n\r\n    cliniquePrices = cliniquePrices.sort((a, b) => a - b);\r\n    let q = Math.floor(cliniquePrices.length / 3);\r\n\r\n    for(let i = 0; q > 0; i++, q--){\r\n      t -= cliniquePrices[i];\r\n    }\r\n\r\n    return +t.toFixed(2);\r\n  }, [cart]);\r\n\r\n  return total;\r\n};\r\n\r\nexport default useTotal;","import { FC, memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { RiShoppingCartLine } from 'react-icons/ri';\r\nimport { BsUiChecksGrid, BsBoxSeam } from 'react-icons/bs';\r\nimport { IoHomeOutline } from 'react-icons/io5';\r\nimport { FiMessageCircle } from 'react-icons/fi';\r\n\r\nconst Navbar: FC<{total: number}> = ({total}) => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar--mobile\">\r\n        <div className=\"navbar__side--left navbar__side\">\r\n          <Link to=\"/\" aria-label=\"Home\"><IoHomeOutline className=\"icon\" /></Link>\r\n          <Link to=\"/shop\" aria-label=\"Shop\"><BsUiChecksGrid className=\"icon\" /></Link>\r\n        </div>\r\n        <div className=\"navbar__center\">\r\n          <Link to=\"/cart\" aria-label=\"Cart\"><RiShoppingCartLine className=\"icon\" /></Link>\r\n        </div>\r\n        <div className=\"navbar__side--right navbar__side\">\r\n          <Link to=\"/delivery\" aria-label=\"Delivery\"><BsBoxSeam className=\"icon\" /></Link>\r\n          <Link to=\"/contact\" aria-label=\"Contact\"><FiMessageCircle className=\"icon\" /></Link>\r\n        </div>\r\n        <div className=\"navbar__circle\"></div>\r\n      </div>\r\n      <div className=\"navbar--desktop content\">\r\n        <header><Link to=\"/\" aria-label=\"Home\">Maquillage</Link></header>\r\n        <div className=\"navbar__content\">\r\n          <Link to=\"/shop\" aria-label=\"Shop\">Shop</Link>\r\n          <Link to=\"/delivery\" aria-label=\"Delivery\">Delivery</Link>\r\n          <Link to=\"/contact\" aria-label=\"Contact\">Contact</Link>\r\n          <Link to=\"/cart\" className=\"navbar__cart\" aria-label=\"Cart\">\r\n            <RiShoppingCartLine className=\"icon\" />\r\n            <span>${total}</span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default memo(Navbar);","import { FC } from 'react';\r\nimport { DISCOUNT, DISCOUNT_CODE } from '../constants';\r\n\r\nconst DiscountCode: FC = () => {\r\n  return (\r\n    <section className=\"stripe\">\r\n      <p>Discount code {DISCOUNT}% valid now: <span>{DISCOUNT_CODE}</span></p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default DiscountCode;","import { FC, memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Navbar from './Navbar';\r\nimport DiscountCode from './DiscountCode';\r\n\r\nconst Header: FC<{total: number}> = ({total}) => {\r\n  return (\r\n    <>\r\n      <DiscountCode />\r\n      <Navbar total={total} />\r\n      <header className=\"header content\">\r\n        <Link to=\"/\">Maquillage</Link>\r\n      </header>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(Header);","import { FC } from 'react';\r\n\r\nconst Footer: FC = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <section className=\"stripe\">\r\n        <p>&copy; Created by <a href=\"https://martazaorska.github.io/portfolio/\" aria-label=\"Link to my portfolio\" target=\"_blank\" rel=\"noreferrer\">Marta Zaorska</a> {new Date().getFullYear()}</p>\r\n      </section>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import { FC, Suspense, lazy, useEffect } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { selectShopState } from './state';\nimport useTotal from './hooks/useTotal';\n\nimport Loader from './components/Loader';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nconst Home = lazy(() => import(\"./pages/Home\"));\nconst Shop = lazy(() => import(\"./pages/Shop\"));\nconst Delivery = lazy(() => import(\"./pages/Delivery\"));\nconst Contact = lazy(() => import(\"./pages/Contact\"));\nconst Cart = lazy(() => import(\"./pages/Cart\"));\nconst Product = lazy(() => import(\"./pages/Product\"));\n\nconst App: FC = () => {\n  const { cart } = useSelector(selectShopState);\n  const { pathname = \"\" } = useLocation<{pathname: string}>();\n\n  const total = useTotal(cart);\n\n  useEffect(() =>  window.scroll({top: 0, behavior: \"smooth\"}), [pathname]);\n\n  return (\n    <>\n      <Header total={total} />\n      <Suspense fallback={<Loader />}>\n        <main className=\"main\">\n          <Switch>\n            <Route path=\"/\" exact strict><Home /></Route>\n            <Route path=\"/shop\"><Shop /></Route>\n            <Route path=\"/delivery\"><Delivery /></Route>\n            <Route path=\"/contact\"><Contact /></Route>\n            <Route path=\"/cart\"><Cart total={total} /></Route>\n            <Route path=\"/product/:id\"><Product /></Route>\n          </Switch>\n        </main>\n      </Suspense>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { store } from './state/index';\nimport App from './App';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();"],"sourceRoot":""}